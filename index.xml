<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>es Heavy Industries</title>
    <link>http://esheavyindustries.com/</link>
    <description>Recent content on es Heavy Industries</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Apr 2016 21:10:30 -0600</lastBuildDate>
    <atom:link href="http://esheavyindustries.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hand Wired Keyboard pt1</title>
      <link>http://esheavyindustries.com/2016/04/hand-wired-keyboard-pt1/</link>
      <pubDate>Fri, 22 Apr 2016 21:10:30 -0600</pubDate>
      
      <guid>http://esheavyindustries.com/2016/04/hand-wired-keyboard-pt1/</guid>
      <description>

&lt;h1 id=&#34;hand-wired-keyboard-part-1:8c3556715b3b28b429a09ea8fe198deb&#34;&gt;Hand Wired Keyboard Part 1&lt;/h1&gt;

&lt;p&gt;I had been toying with the idea of buying a mechanical keyboard for a few years but the bug didn&amp;rsquo;t really hit until about 8 months ago. Me being me I thought &amp;ldquo;why just buy one
when I could build it myself?!&amp;ldquo;. It turns out that putting your own mechanical keyboard together is kind of a pain in the ass, that&amp;rsquo;s why.&lt;/p&gt;

&lt;p&gt;Ok, so I&amp;rsquo;m going to build a keyboard, time to actually research what it takes to build a keyboard. As with most things, the keyboard community has it&amp;rsquo;s own terms, language and acronyms so I spent
the majority of the first month trying to figure out what the hell they were talking about and mapping their lingo to the actual parts I would need. At this point I thought I had a pretty good idea
on what I needed so I went out to source probably the most important part of a keyboard: the switches. These are what your key caps go onto and what actually send the computer a signal that something
has happened.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;figure&gt;
  &lt;img src=&#34;http://esheavyindustries.com/pics/keyboard1.jpg&#34; alt=&#34;cherry switch&#34;&gt;
    &lt;figcaption&gt;&lt;b&gt;made of baby parts&lt;/b&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Turns out there are about 500 fucking kinds of switches out there and they all do different things just a tiny bit differently. Some are &amp;ldquo;linear&amp;rdquo;, some are &amp;ldquo;tactile bump&amp;rdquo; and some can even be &amp;ldquo;tactile click&amp;rdquo;. That is just a small sampling and those are the major categories, under those are tons of other categories that ends up creating this insane matrix of keyboard switches.
I knew I wanted something that wasn&amp;rsquo;t super &amp;ldquo;clicky&amp;rdquo; because that is annoying so I was told to check out the &amp;ldquo;cherry mx brown&amp;rdquo; switch. This should have been the first sign of what I was getting into. Go out to Google/Amazon/eBay and try to find 60-80 cherry mx brown switches, I&amp;rsquo;ll wait. Turns out these things (as well as other cherry mx switches) are in such high demand that they are hardly ever available. When they do pop up they sell out super quick unless it happens to match-up with one of their big shipments that I guess only happen a couple times a year. Anyways, I was coming up empty handed
everywhere I looked so I had to go the message board group-buy route. Luckily the group-buy was legit and I ended up with all the switches I needed.&lt;/p&gt;

&lt;p&gt;Ah, so now I needed something to put those switches into aka the &amp;ldquo;plate&amp;rdquo;. I knew I wanted a ~65% style keyboard which is basically a typical keyboard stripped of all the non-essential stuff (for me). Things like function keys, media keys, etc.
I came across a few sites (&lt;a href=&#34;http://builder.swillkb.com/&#34;&gt;plate &amp;amp; case builder&lt;/a&gt; and &lt;a href=&#34;http://www.keyboard-layout-editor.com/&#34;&gt;keyboard layout editor&lt;/a&gt;) that allowed you to design your own keyboard layout and then create a CAD type file from those layouts which could then be provided to a shop or vendor who could cut the pattern out in metal, plastic, whatever.
So I created my layout, created my CAD files for the plates (top and bottom) and headed over to &lt;a href=&#34;http://www.bigbluesaw.com/&#34;&gt;big blue saw&lt;/a&gt; to get my quote. For one set of plates it was going to cost me ~$90!! Now I&amp;rsquo;m not saying that the pricing from big blue saw is out of line, it just wasn&amp;rsquo;t what I was expecting. Once you order five or more sets of the plates the pricing was almost cut in half but I wasn&amp;rsquo;t going to be able to find that many people who wanted to make their own keyboard.&lt;/p&gt;

&lt;p&gt;By pure chance I came across someone online talking about their &amp;ldquo;neutrino&amp;rdquo; build. It was a 65% keyboard that was being sold by &lt;a href=&#34;http://olkb.com/&#34;&gt;Ortholinear Keyboards&lt;/a&gt; and it was right in my price range so I went ahead and pulled the trigger. This ended up being yet another pain that I wasn&amp;rsquo;t anticipating as due to a previous group buy offered by Ortholinear Keyboards, they were so backed up with orders that my stuff didn&amp;rsquo;t ship for over four months. At this point I&amp;rsquo;m starting to realize that things in the mechanical keyboard game don&amp;rsquo;t come easy.&lt;/p&gt;

&lt;p&gt;When the plates for the keyboard finally arrived I grabbed all the other parts I had ordered and went to town. Initially I had talked myself into believing that soldering all of these random diodes and wires wasn&amp;rsquo;t going to be an issue and that I&amp;rsquo;d knock it out in no time. wrong. wrong. Through hole soldering will never (never!) prepare you for the pain that is soldering a hand wired keyboard. If you are reading this right now because you are thinking about doing this I HIGHLY suggest you either make your own PCB or buy a kit that comes with one.&lt;/p&gt;

&lt;p&gt;I stupidly sat down at my table, spread everything out in front of me and assumed in an hour I&amp;rsquo;d have a keyboard ready to go.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;figure&gt;
  &lt;img src=&#34;http://esheavyindustries.com/pics/kb/parts.jpg&#34; alt=&#34;keyboard parts&#34;&gt;
  &lt;figcaption&gt;&lt;b&gt;what you need for a keyboard&lt;/b&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;The suggested process is to put all of your switches in and then start wiring up the rows (which includes the diodes) and then the columns so that&amp;rsquo;s exactly what I did.
It quickly became evident that there is no easy way to solder the diodes onto the switch and then to the other diode across from it. I tried about five different techniques and none of them really made it easy. Having a few drinks however did make me less angry so that is my suggestion if you plan on doing this: alcohol + hours of spare time.
Between trying various ways to make it easier, throwing things and actual soldering it took me about 30 minutes to do the first row. If you&amp;rsquo;re keeping track you&amp;rsquo;ll realize that based on my initial time calculations that left me with 30 minutes to solder four more rows. I decided to just shut it down and work on the other rows later which in hindsight was probably the right call.
The next day I was able to come back knowing what type of pain I was in for and just power through it. The result:&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;figure&gt;
  &lt;img src=&#34;http://esheavyindustries.com/pics/kb/rows.jpg&#34; alt=&#34;keyboard rows&#34;&gt;
  &lt;figcaption&gt;&lt;b&gt;never again&lt;/b&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Rows were done so that meant the columns were next. No diodes this time just straight up wire, no problem right? Nope. You don&amp;rsquo;t want the wiring to touch so that means you need to leave the shielding on the wiring you use for the columns. So to expose the wire I needed to solder I just used my pocket knife and stripped away small sections where I needed the bare wire exposed. That process took me way too long. The actual soldering was way easier than the rows though so I was able to cruise through that pretty quickly.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;figure&gt;
  &lt;img src=&#34;http://esheavyindustries.com/pics/kb/rows_columns.jpg&#34; alt=&#34;keyboard rows and columns&#34;&gt;
  &lt;figcaption&gt;&lt;b&gt;are we there yet?&lt;/b&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Oh god I&amp;rsquo;m so close at this point&amp;rdquo; is all I could think when it came time to wire up the teensy. The teensy is basically the brains of the keyboard and connected to the various rows and columns I had created earlier. Routing the wires was kind of a pain but nothing crazy and overall this was probably the least stressful part of the build.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;figure&gt;
  &lt;img src=&#34;http://esheavyindustries.com/pics/kb/teensy.jpg&#34; alt=&#34;keyboard with the teensy&#34;&gt;
  &lt;figcaption&gt;&lt;b&gt;so.damn.close.&lt;/b&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;At this point I attached the base plate but left out the middle acrylic piece because I needed access to the reset button on the teensy and had plans to re-work a few things anyways. I also put the actual key caps on and went to town creating the firmware needed to make this beast actually type. A group of people way smarter than I am have a great firmware project out on Github just for projects like this, it&amp;rsquo;s called &lt;a href=&#34;https://github.com/tmk/tmk_keyboard&#34;&gt;TMK&lt;/a&gt; and is actually pretty easy to use.
Since all keyboards are going to be different, TMK has you pass in what your keyboard matrix looks like and then what you want each key to do when it&amp;rsquo;s pressed. TMK also has this concept of layers which is great for my 65% board as I can still have the functionality of say, media keys, I just need to use a specific key sequence to activate it. As an example I don&amp;rsquo;t have a &amp;ldquo;tilde&amp;rdquo; key by default so if I press fn + Esc I&amp;rsquo;ll get a tilde.
Anyways, I got the firmware to compile and loaded it onto the teensy and it actually worked! Below is the final keyboard with a few keys that I&amp;rsquo;ll have to swap out as they are not the right size/type:&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;figure&gt;
  &lt;img src=&#34;http://esheavyindustries.com/pics/kb/kb-final.jpg&#34; alt=&#34;final keyboard&#34;&gt;
  &lt;figcaption&gt;&lt;b&gt;tada!&lt;/b&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;This is where I&amp;rsquo;m at currently but the project is not complete. The idea of having to use a wired keyboard in 2016 makes me sad so the next phase will be to hook in a bluetooth + battery setup so I can use this POS without an ugly USB cable attached to it. For now though I&amp;rsquo;m going to take some time to recover.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>nixie clock part 1-a</title>
      <link>http://esheavyindustries.com/2016/03/nixie-clock-part-1-a/</link>
      <pubDate>Thu, 24 Mar 2016 21:10:30 -0600</pubDate>
      
      <guid>http://esheavyindustries.com/2016/03/nixie-clock-part-1-a/</guid>
      <description>

&lt;h1 id=&#34;nixie-clock-part-1-a:b42922deece4681a9be1119f7f897cb6&#34;&gt;Nixie clock part 1-a&lt;/h1&gt;

&lt;p&gt;So things have changed. I&amp;rsquo;ve taken out the Arudino and replaced it with an &lt;a href=&#34;https://www.adafruit.com/products/2000&#34;&gt;Adafruit Pro Trinket&lt;/a&gt;. Additionally I updated the PCB so show the &lt;a href=&#34;https://www.adafruit.com/products/1588&#34;&gt;Adafruit Bluefruit&lt;/a&gt; and took out the homebrew RTC circuit and just went with the &lt;a href=&#34;https://www.adafruit.com/products/3013&#34;&gt;Adafruit DS3231 breakout&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;figure&gt;
  &lt;img src=&#34;http://esheavyindustries.com/pics/nixieclock-small_pcb2.png&#34; alt=&#34;nixie PCB&#34;&gt;
  &lt;figcaption&gt;&lt;b&gt;still looks like shit&lt;/b&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;The reason for these changes was mainly just for simplicity. The new parts are easier to source, come from a vendor who I know makes really good/cool stuff and it makes my life a bit easier. Now I&amp;rsquo;m off to eBay to start the search for nixie tubes!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>nixie clock part 1</title>
      <link>http://esheavyindustries.com/2016/03/nixie-clock-part-1/</link>
      <pubDate>Sat, 19 Mar 2016 19:16:20 -0600</pubDate>
      
      <guid>http://esheavyindustries.com/2016/03/nixie-clock-part-1/</guid>
      <description>

&lt;h1 id=&#34;nixie-clock-part-1:f1fc92a632fd8952c6aa59df89efca94&#34;&gt;Nixie clock part 1&lt;/h1&gt;

&lt;p&gt;I enjoy building things and for some reason, I tend to enjoy building more &amp;ldquo;classic&amp;rdquo; things. Awhile back I came across the &lt;a href=&#34;https://www.adafruit.com/products/194&#34;&gt;Adafruit Ice Tube Clock Kit&lt;/a&gt; which I thought was one amazing looking clock. Unfortunately they discontinued it but since I enjoy making things harder on myself than they should be, I went to Google to try and find something similar. What I came across was a pretty popular project called a nixie clock.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;figure&gt;
  &lt;img src=&#34;http://esheavyindustries.com/pics/nixie1.jpg&#34; alt=&#34;example nixie clock&#34;&gt;
  &lt;figcaption&gt;&lt;b&gt;example of a nixie clock&lt;/b&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;A nixie clock is simply a clock that is built using multiple &lt;a href=&#34;https://en.wikipedia.org/wiki/Nixie_tube&#34;&gt;nixie tubes&lt;/a&gt; for the display. They come in all sorts of different sizes and shapes which makes it easy to design a clock for whatever purpose you want (small desk clock, larger wall clock, etc). In my case I wanted something similar to the Adafruit clock, small enough that I could put it on a desk but still big enough to show off some of the components. I like the mechanical look so I had planned on putting everything in some type of clear case so you could see all of the electronics.&lt;/p&gt;

&lt;h2 id=&#34;research:f1fc92a632fd8952c6aa59df89efca94&#34;&gt;Research&lt;/h2&gt;

&lt;p&gt;I am not an electronics guy at all, I can take a bag of parts with a schematic or instructions and solder it all together, but if you are looking at me to design a circuit from the ground up then you are in for a world of hurt.
Luckily there are a bunch of smart people out there that have built nixie clocks before and have been kind enough to share. One of those people is Andrew Saxén who has not only a great write-up on how he built his nixie clock, but also links to the code that runs it as well as the PCB layout. You can check it out at his site &lt;a href=&#34;http://codeterrific.com/arduino/nixie-clock-build&#34;&gt;Code Terrific&lt;/a&gt;. There are tons of other links out there showing various builds, but for whatever reason Adam&amp;rsquo;s just seemed to click with me so I decided I was going to use what he had already done as my &amp;ldquo;base&amp;rdquo;.&lt;/p&gt;

&lt;h2 id=&#34;chop-chop:f1fc92a632fd8952c6aa59df89efca94&#34;&gt;chop chop&lt;/h2&gt;

&lt;p&gt;For my project all I wanted was a clock, I didn&amp;rsquo;t really care about temp or humidity so there wouldn&amp;rsquo;t be a need to include a DHT22 sensor in the build. Additionally, as of right now I plan on having the PCB printed as opposed to etching one at home. This means I&amp;rsquo;ll be able to take advantage of using a two sided PCB. The third change from Adam&amp;rsquo;s original design I&amp;rsquo;d like to make is to directly integrate his real-time clock circuit into the nixie PCB, that way everything is all in one spot.&lt;/p&gt;

&lt;p&gt;With all of that I downloaded the &lt;a href=&#34;http://fritzing.org/home/&#34;&gt;Fritzing&lt;/a&gt; application and set out to re-create Adam&amp;rsquo;s PCB as best I could. Once I had that I started to strip away things I didn&amp;rsquo;t think I&amp;rsquo;d need, add some new things and then try and condense it down as much as possible to save on costs. Part of me wanted to make a really nice looking PCB but for my first attempt the cost would have been a bit more than I wanted to spend. I&amp;rsquo;m thinking if this turns out ok I can always re-use the nixie tubes and create a new, fancier PCB later.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;figure&gt;
  &lt;img src=&#34;http://esheavyindustries.com/pics/nixieclock-small_pcb.jpg&#34; alt=&#34;nixie PCB&#34;&gt;
  &lt;figcaption&gt;&lt;b&gt;holy rats nest!&lt;/b&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;If your skills are at hobbyist electronics person or above I apologize for the mess that is the PCB above :)&lt;/p&gt;

&lt;p&gt;With this design it would be about ~$58 for three boards from &lt;a href=&#34;https://oshpark.com&#34;&gt;OSH Park&lt;/a&gt; which isn&amp;rsquo;t that bad for me. With a small child around and a full-time job the ability for me to find time to hand etch these is highly unlikely so it makes more sense to just bite the bullet and have someone else print them.&lt;/p&gt;

&lt;h2 id=&#34;next-steps:f1fc92a632fd8952c6aa59df89efca94&#34;&gt;Next steps&lt;/h2&gt;

&lt;p&gt;The base PCB isn&amp;rsquo;t finalized but I think it&amp;rsquo;s close enough for now. The next thing that I have been thinking about is how to mount the tubes. Part of me would like to make an additional PCB and have the tubes slot right into that PCB and then connect it to the other PCB either via headers or a ribbon cable. The problem with that is since I&amp;rsquo;m pretty much useless, I currently don&amp;rsquo;t have the ability to design the libraries needed to mock out IN-8 tubes and I haven&amp;rsquo;t been able to find any existing resources. Everyone seems to have the IN-12A but I just don&amp;rsquo;t like the look of those as much.&lt;/p&gt;

&lt;p&gt;Another option would be to use &lt;a href=&#34;http://www.pvelectronics.co.uk/index.php?main_page=product_info&amp;amp;cPath=4_11&amp;amp;products_id=74&#34;&gt;these&lt;/a&gt; pre-built &amp;ldquo;sockets&amp;rdquo; from pv electronics. Outside of having a nice way to interface with the tubes though I&amp;rsquo;m not sure how much they would get me.&lt;/p&gt;

&lt;p&gt;The third option is do just do what Adam did and run the wires directly to the tubes. I think if I could do this in a fairly clean manner it would look pretty cool and go with the whole mechanical/exposed look I want.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Have some extra cash? Help make your life easier</title>
      <link>http://esheavyindustries.com/2016/02/have-some-extra-cash-help-make-your-life-easier/</link>
      <pubDate>Sat, 13 Feb 2016 13:02:40 -0700</pubDate>
      
      <guid>http://esheavyindustries.com/2016/02/have-some-extra-cash-help-make-your-life-easier/</guid>
      <description>&lt;p&gt;If you have some extra cash maybe you would consider donating some of it to one of the various open source projects that you likely use almost every single day? I know it is easy to forgot about where many of the things we use on a daily basis come from, but odds are that if you are reading this you probably use some kind of open source app.
Where would you be without &lt;a href=&#34;http://www.openbsd.org/donations.html&#34;&gt;OpenSSH&lt;/a&gt; to securely connect to your servers?
I know I&amp;rsquo;d personally be fucked without &lt;a href=&#34;http://www.haproxy.org/&#34;&gt;HAProxy&lt;/a&gt; doing the load balancing for many of the apps I&amp;rsquo;ve supported.
What about &lt;a href=&#34;http://www.apache.org/foundation/contributing.html&#34;&gt;Apache&lt;/a&gt;? Sure it might not be the hot tech now but how many of you have used it as your HTTP server both at work or for your personal site?&lt;/p&gt;

&lt;p&gt;I could go on and on but the point I&amp;rsquo;m trying to make is that there are many (many!) tools that we use on a daily basis that someone (or a group of someones) are building, fixing and maintaining that make our lives easier.
Some of these have big corporate sponsors but many of them do not.
A lot of these people have other jobs they use to pay the bills and then work on their open source projects during their &amp;ldquo;off&amp;rdquo; time.
Some groups build products, others focus on your rights (take the &lt;a href=&#34;https://supporters.eff.org/donate/button&#34;&gt;EFF&lt;/a&gt; for example). Others, like the &lt;a href=&#34;https://www.torproject.org/donate/donate.html.en&#34;&gt;Tor&lt;/a&gt; project, do both.&lt;/p&gt;

&lt;p&gt;I encourage you to make a list of some of the open source tools you use on a daily basis and consider donating either money or time to those projects.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>deb-simple, a no frills apt repository server</title>
      <link>http://esheavyindustries.com/2016/02/deb-simple-a-no-frills-apt-repository-server/</link>
      <pubDate>Wed, 03 Feb 2016 01:46:49 -0700</pubDate>
      
      <guid>http://esheavyindustries.com/2016/02/deb-simple-a-no-frills-apt-repository-server/</guid>
      <description>&lt;p&gt;I recently needed an simple way to serve up debian packages via apt-get for our internal apps. Oddly enough finding something that fit our needs was a bit harder than I thought. We needed something that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Supported multiple versions of the same package&lt;/li&gt;
&lt;li&gt;Didn&amp;rsquo;t care about signing or &amp;ldquo;changes&amp;rdquo; files&lt;/li&gt;
&lt;li&gt;Allowed us to upload via an API or some type of incoming directory&lt;/li&gt;
&lt;li&gt;Could handle multiple packages coming in at once without corrupting the repo&lt;/li&gt;
&lt;li&gt;Was easy to setup/maintain&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There were a few services out there that fit our needs but they were not free so I took a shot at building an app to fit our use-case. The outcome was &lt;a href=&#34;https://github.com/esell/deb-simple&#34;&gt;deb-simple&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Currently it supports uploading packages via POST, deleting packages via DELETE and does a good job (I think) of making sure the repository listing doesn&amp;rsquo;t become corrupted.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>http://esheavyindustries.com/contact/</link>
      <pubDate>Wed, 18 Mar 2015 23:06:53 -0600</pubDate>
      
      <guid>http://esheavyindustries.com/contact/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>